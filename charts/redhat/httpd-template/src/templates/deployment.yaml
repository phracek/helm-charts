apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Defines how to deploy the application server
    template.alpha.openshift.io/wait-for-ready: "true"
    image.openshift.io/triggers: |-
      [
        {
          "from":{
            "kind":"ImageStreamTag",
            "name":"{{ .Values.name }}:example-latest"
          },
          "fieldPath":"spec.template.spec.containers[0].image"
        }
      ]
  name: "{{ .Values.name }}"
  labels:
    app: "{{ .Values.name }}-example"
    template: "{{ .Values.name }}-example"
  namespace: "{{ .Release.Namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.name }}-example"
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{ .Values.name }}-example"
      namespace: "{{ .Release.Namespace }}"
    spec:
      containers:
      - env: []
        image: "{{ .Values.name }}:latest"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 3
        name: "{{ .Values.name }}-example"
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 3
          timeoutSeconds: 3
        resources:
          limits:
            memory: {{ .Values.memory_limit }}
